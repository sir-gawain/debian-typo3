From: Christian Welzel <gawain@camlann.de>
Date: Fri, 03 Mar 2013 17:00:00 +0100
Subject: Fix security Vulnerabilities from TYPO3-SA-2013-1 (#702574)
Description: Fixes TYPO3-SA-2013-1 (#702574)

--- typo3.orig/t3lib/class.t3lib_div.php
+++ typo3/t3lib/class.t3lib_div.php
@@ -1195,27 +1195,28 @@
 	/**
 	 * Returns a proper HMAC on a given input string and secret TYPO3 encryption key.
 	 *
-	 * @param	 string		Input string to create HMAC from
+	 * @param string $input Input string to create HMAC from
+	 * @param string $additionalSecret additionalSecret to prevent hmac beeing used in a different context
 	 * @return	 string		resulting (hexadecimal) HMAC currently with a length of 40 (HMAC-SHA-1)
 	 */
-	public static function hmac($input) {
+	public static function hmac($input, $additionalSecret = '') {
 		$hashAlgorithm = 'sha1';
 		$hashBlocksize = 64;
 		$hmac = '';
-
+		$secret = $GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey'] . $additionalSecret;
 		if (extension_loaded('hash') && function_exists('hash_hmac') && function_exists('hash_algos') && in_array($hashAlgorithm, hash_algos())) {
-			$hmac = hash_hmac($hashAlgorithm, $input, $GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey']);
+			$hmac = hash_hmac($hashAlgorithm, $input, $secret);
 		} else {
 				// outer padding
 			$opad = str_repeat(chr(0x5C), $hashBlocksize);
 				// innner padding
 			$ipad = str_repeat(chr(0x36), $hashBlocksize);
-			if (strlen($GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey']) > $hashBlocksize) {
+			if (strlen($secret) > $hashBlocksize) {
 					// keys longer than blocksize are shorten
-				$key = str_pad(pack('H*', call_user_func($hashAlgorithm, $GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey'])), $hashBlocksize, chr(0x00));
+				$key = str_pad(pack('H*', call_user_func($hashAlgorithm, $secret)), $hashBlocksize, chr(0x00));
 			} else {
 					// keys shorter than blocksize are zero-padded
-				$key = str_pad($GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey'], $hashBlocksize, chr(0x00));
+				$key = str_pad($secret, $hashBlocksize, chr(0x00));
 			}
 			$hmac = call_user_func($hashAlgorithm, ($key ^ $opad) . pack('H*', call_user_func($hashAlgorithm, ($key ^ $ipad) . $input)));
 		}
--- typo3.orig/typo3/sysext/cms/tslib/class.tslib_content.php
+++ typo3/typo3/sysext/cms/tslib/class.tslib_content.php
@@ -4847,12 +4847,9 @@
 				}
 				$target = isset($conf['extTarget']) ? $conf['extTarget'] : $GLOBALS['TSFE']->extTarget;
 				if ($GLOBALS['TSFE']->config['config']['jumpurl_enable']) {
-					$res = '<a' . ' href="' . htmlspecialchars($GLOBALS['TSFE']->absRefPrefix .
-						$GLOBALS['TSFE']->config['mainScript'] . $initP .
-						'&jumpurl=' . rawurlencode('http://' . $parts[0]) . $GLOBALS['TSFE']->getMethodUrlIdToken) . '"' .
-						($target ? ' target="' . $target . '"' : '') .
-						$aTagParams . $this->extLinkATagParams('http://' . $parts[0], 'url') .
-						'>';
+					$jumpurl = 'http://' . $parts[0];
+					$juHash = t3lib_div::hmac($jumpurl, 'jumpurl');
+					$res = '<a' . ' href="' . htmlspecialchars(($GLOBALS['TSFE']->absRefPrefix . $GLOBALS['TSFE']->config['mainScript'] . $initP . '&jumpurl=' . rawurlencode($jumpurl))) . '&juHash=' . $juHash . $GLOBALS['TSFE']->getMethodUrlIdToken . '"' . ($target ? ' target="' . $target . '"' : '') . $aTagParams . $this->extLinkATagParams(('http://' . $parts[0]), 'url') . '>';
 				} else {
 					$res = '<a' . ' href="http://' . htmlspecialchars($parts[0]) . '"' .
 						($target ? ' target="' . $target . '"' : '') .
@@ -5601,10 +5598,10 @@
 						$scheme = '';
 					}
 					if ($GLOBALS['TSFE']->config['config']['jumpurl_enable']) {
-						$this->lastTypoLinkUrl = $GLOBALS['TSFE']->absRefPrefix .
-							$GLOBALS['TSFE']->config['mainScript'] . $initP .
-							'&jumpurl=' . rawurlencode($scheme . $link_param) .
-							$GLOBALS['TSFE']->getMethodUrlIdToken;
+						$url = $GLOBALS['TSFE']->absRefPrefix . $GLOBALS['TSFE']->config['mainScript'] . $initP;
+						$jumpurl = $scheme . $link_param;
+						$juHash = t3lib_div::hmac($jumpurl, 'jumpurl');
+						$this->lastTypoLinkUrl = $url . '&jumpurl=' . rawurlencode($jumpurl) . '&juHash='. $juHash . $GLOBALS['TSFE']->getMethodUrlIdToken;
 					} else {
 						$this->lastTypoLinkUrl = $scheme . $link_param;
 					}
@@ -5620,11 +5617,13 @@
 							$linktxt = rawurldecode($link_param);
 						if ($GLOBALS['TSFE']->config['config']['jumpurl_enable'] || $conf['jumpurl']) {
 							$theFileEnc = str_replace('%2F', '/', rawurlencode(rawurldecode($link_param)));
-							$this->lastTypoLinkUrl = $GLOBALS['TSFE']->absRefPrefix .
-								$GLOBALS['TSFE']->config['mainScript'] . $initP .
-								'&jumpurl=' . rawurlencode($link_param) .
-								($conf['jumpurl.']['secure'] ? $this->locDataJU($theFileEnc, $conf['jumpurl.']['secure.']) : '') .
-								$GLOBALS['TSFE']->getMethodUrlIdToken;
+							$url = $GLOBALS['TSFE']->absRefPrefix . $GLOBALS['TSFE']->config['mainScript'] . $initP . '&jumpurl=' . rawurlencode($link_param);
+							if ($conf['jumpurl.']['secure']) {
+								$url .= $this->locDataJU($theFileEnc, $conf['jumpurl.']['secure.']);
+							} else {
+								$url .= '&juHash=' . t3lib_div::hmac($link_param, 'jumpurl');
+							}
+							$this->lastTypoLinkUrl =  $url . $GLOBALS['TSFE']->getMethodUrlIdToken;
 						} else {
 							$this->lastTypoLinkUrl = $GLOBALS['TSFE']->absRefPrefix . $link_param;
 						}
@@ -6229,8 +6228,8 @@
 				$linktxt = str_ireplace($mailAddress, $spamProtectedMailAddress, $linktxt);
 			}
 		} else {
-			$mailToUrl = $GLOBALS['TSFE']->absRefPrefix . $GLOBALS['TSFE']->config['mainScript'] .
-				$initP . '&jumpurl=' . rawurlencode($mailToUrl) . $GLOBALS['TSFE']->getMethodUrlIdToken;
+			$juHash = t3lib_div::hmac($mailToUrl, 'jumpurl');
+			$mailToUrl = $GLOBALS['TSFE']->absRefPrefix . $GLOBALS['TSFE']->config['mainScript'] . $initP . '&jumpurl=' . rawurlencode($mailToUrl) . '&juHash=' . $juHash . $GLOBALS['TSFE']->getMethodUrlIdToken;
 		}
 		return array(
 			$mailToUrl, $linktxt
--- typo3.orig/typo3/sysext/cms/tslib/class.tslib_fe.php
+++ typo3/typo3/sysext/cms/tslib/class.tslib_fe.php
@@ -2630,6 +2630,7 @@
 	function setExternalJumpUrl()	{
 		if ($extUrl = $this->sys_page->getExtURL($this->page, $this->config['config']['disablePageExternalUrl']))	{
 			$this->jumpurl = $extUrl;
+			t3lib_div::_GETset(t3lib_div::hmac($this->jumpurl, 'jumpurl'), 'juHash');
 		}
 	}
 
@@ -2710,7 +2711,27 @@
 							break;
 					}
 				}
+				$allowRedirect = FALSE;
+				if (t3lib_div::hmac($this->jumpurl, 'jumpurl') === (string)t3lib_div::_GP('juHash')) {
+					$allowRedirect = TRUE;
+				} elseif (is_array($this->TYPO3_CONF_VARS['SC_OPTIONS']['tslib/class.tslib_fe.php']['jumpurlRedirectHandler'])) {
+					foreach ($this->TYPO3_CONF_VARS['SC_OPTIONS']['tslib/class.tslib_fe.php']['jumpurlRedirectHandler'] as $classReference) {
+						$hookObject = t3lib_div::getUserObj($classReference);
+						$allowRedirectFromHook = FALSE;
+						if (method_exists($hookObject, 'jumpurlRedirectHandler')) {
+							$allowRedirectFromHook = $hookObject->jumpurlRedirectHandler($this->jumpurl, $this);
+						}
+						if ($allowRedirectFromHook === TRUE) {
+							$allowRedirect = TRUE;
+							break;
+						}
+					}
+				}
+				if ($allowRedirect) {
 				t3lib_utility_Http::redirect($this->jumpurl, $statusCode);
+				} else {
+					throw new Exception('jumpurl: Calculated juHash did not match the submitted juHash.', 1359987599);
+				}
 			}
 		}
 	}
--- typo3.orig/typo3/sysext/extbase/Classes/Persistence/Storage/Typo3DbBackend.php
+++ typo3/typo3/sysext/extbase/Classes/Persistence/Storage/Typo3DbBackend.php
@@ -558,15 +558,17 @@
 				$typeOfRelation = $columnMap->getTypeOfRelation();
 				if ($typeOfRelation === Tx_Extbase_Persistence_Mapper_ColumnMap::RELATION_HAS_AND_BELONGS_TO_MANY) {
 					$relationTableName = $columnMap->getRelationTableName();
-					$sql['where'][] = $tableName . '.uid IN (SELECT ' . $columnMap->getParentKeyFieldName() . ' FROM ' . $relationTableName . ' WHERE ' . $columnMap->getChildKeyFieldName() . '=' . $this->getPlainValue($operand2) . ')';
+					$sql['where'][] = $tableName . '.uid IN (SELECT ' . $columnMap->getParentKeyFieldName() . ' FROM ' . $relationTableName . ' WHERE ' . $columnMap->getChildKeyFieldName() . '=?)';
+					$parameters[] = intval($this->getPlainValue($operand2));
 				} elseif ($typeOfRelation === Tx_Extbase_Persistence_Mapper_ColumnMap::RELATION_HAS_MANY) {
 					$parentKeyFieldName = $columnMap->getParentKeyFieldName();
 					if (isset($parentKeyFieldName)) {
 						$childTableName = $columnMap->getChildTableName();
-						$sql['where'][] = $tableName . '.uid=(SELECT ' . $childTableName . '.' . $parentKeyFieldName . ' FROM ' . $childTableName . ' WHERE ' . $childTableName . '.uid=' . $this->getPlainValue($operand2) . ')';
+						$sql['where'][] = $tableName . '.uid=(SELECT ' . $childTableName . '.' . $parentKeyFieldName . ' FROM ' . $childTableName . ' WHERE ' . $childTableName . '.uid=?)';
+						$parameters[] = intval($this->getPlainValue($operand2));
 					} else {
-						$statement = 'FIND_IN_SET(' . $this->getPlainValue($operand2) . ',' . $tableName . '.' . $columnName . ')';
-						$sql['where'][] = $statement;
+						$sql['where'][] = 'FIND_IN_SET(?,' . $tableName . '.' . $columnName . ')';
+						$parameters[] = intval($this->getPlainValue($operand2));
 					}
 				} else {
 					throw new Tx_Extbase_Persistence_Exception_RepositoryException('Unsupported relation for contains().', 1267832524);
@@ -893,9 +895,9 @@
 	 */
 	protected function parseLimitAndOffset($limit, $offset, array &$sql) {
 		if ($limit !== NULL && $offset !== NULL) {
-			$sql['limit'] = $offset . ', ' . $limit;
+			$sql['limit'] = intval($offset) . ', ' . intval($limit);
 		} elseif ($limit !== NULL) {
-			$sql['limit'] = $limit;
+			$sql['limit'] = intval($limit);
 		}
 	}
 
